:set nextpattern=^\次,^\続き,\bnext,^>$,^(>>\|??)$,^(>\|??),(>\|??),\bmore\b$
:set previouspattern=^\前,^\戻,\bprev|previous\b,^<$,^(<<\|??)$,^(<\|??),(<\|??)$

"基本設定
"input要素にfocusを奪われない
set focuscontent
set wildoptions=auto

"ZZでquitを無効
noremap ZZ <NOP>
set titlestring=Firefox
"検索を強調
set hlsearch
" sで，登録してるキーワードの補完(gでGoogleとか)，lで:openなどの補完をアドレスバーの補完が可能
set complete=sl
set history=1000

"キーマップ設定
"j/kの移動量を2倍
map j 2<C-e>
map k 2<C-y>
"<BS>で「戻る」
map <BS> H
"h/lでタブ移動
map h <C-p>
map l <C-n>

map <C-R> :mapc<CR>:cmapc<CR>:imapc<CR>:source ~/_vimperatorrc<CR>

"vimp3
set hintchars = qjklasdfuiower

"プラグイン設定
" Greasemonkey 0.9.xでwindowを共通にする
javascript <<EOF
autocommands.add('VimperatorEnter', '.*',
  function() {
    let gm = Components.classes['@greasemonkey.mozdev.org/greasemonkey-service;1'] ||
                 Components.classes['@scriptish.erikvold.com/scriptish-service;1'];
    if (gm) {
      gm = gm.getService().wrappedJSObject;
      if (gm.injectScripts.toSource().search('sharedWindow') == -1) {
          gm.injectScripts = liberator.eval(
              gm.injectScripts.toSource()
                "  .replace(/(?=var firebugConsole)/,
                   .replace(/(?=(?:var|let) delays|(?:firebug|fb)Console)/,
                          'var sharedWindow = {};' +
                          'sharedWindow.window = sharedWindow;' +
                          'sharedWindow.__proto__ = new XPCNativeWrapper(unsafeContentWin);')
                  .replace(/(?=sandbox\.__proto__)/, ' sandbox.window = sharedWindow;'),
              gm.injectScripts);
      }
    }
  });
EOF

"feedsomekeys_3
command! -nargs=+ lazy autocmd VimperatorEnter .* <args>
lazy fmaps -u='mail\.google\.com/mail/.*' c / j,n k,p n,j p,k o u e x s r a # [ ] ? gi gs gt gd ga gc
lazy fmaps -u='www\.google\.co\.jp/.*' j k v p o : s ? + i
lezy fmaps -u='www\.google\.com/calendar/.*' a w m x c e <Del> / + q s ? A W M X C E
lazy fmaps -u='livedoor\.com/reader' j k s a p o v c z b < > Z <Space> <S-Space> i q w G U u

"hatebu
javascript if (typeof hBookmark != 'undefined') liberator.loadScript('chrome://hatenabookmark/content/vimperator/plugin/hatenabookmark.js', {__proto__: this})


